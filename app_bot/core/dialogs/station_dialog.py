from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Button, Start, SwitchTo, Select, Column, Url
from aiogram_dialog.widgets.input import TextInput
from core.dialogs.callbacks import StationCallbackHandler
from core.dialogs.getters import get_bot_data, get_station_data, get_products_by_station, get_order_data, get_input_data
from core.states.main_menu import MainMenuStateGroup
from core.states.station import StationStateGroup
from core.states.support import SupportStateGroup
from core.utils.texts import _


station_dialog = Dialog(
    # input_station
    Window(
        Format(text=_('INPUT_STATION', bot_username='{bot_username}')),
        TextInput(
            id='input_station',
            type_factory=int,
            on_success=StationCallbackHandler.entered_station_id
        ),
        Start(Const(text=_('BACK_BUTTON')), id='go_to_menu', state=MainMenuStateGroup.main_menu),
        getter=get_bot_data,
        state=StationStateGroup.input_station
    ),

    # confirm_station
    Window(
        Format(text='<b>{station.name}</b>\n'
                    '<b>–ê–¥—Ä–µ—Å:</b> {station.address}'),
        Button(Const(text=_('CONFIRM_BUTTON')), id='go_to_input_product', on_click=StationCallbackHandler.list_of_products),
        # TODO: ADD BUTTON '–î–æ–±–∞–≤–∏—Ç—å –ê–ó–° –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ' (FavouriteStation)
        SwitchTo(Const(text='–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –ê–ó–°'), id='go_to_input_station', state=StationStateGroup.input_station),
        getter=get_station_data,
        state=StationStateGroup.confirm_station
    ),

    # pick_product
    Window(
        Format(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ø–ª–∏–≤–æ üëá'),
        Column(
            Select(
                    id='_product_select',
                    items='products',
                    item_id_getter=lambda item: item.id,
                    text=Format(text='{item.name}'),
                    on_click=StationCallbackHandler.selected_product,
            ),
        ),
        SwitchTo(Const(text='–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –ê–ó–°'), id='go_to_input_station', state=StationStateGroup.input_station),
        getter=get_products_by_station,
        state=StationStateGroup.pick_product
    ),

    # input_amount
    Window(
        Format(text='–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Ç—Ä–æ–≤'),
        TextInput(
            id='input_amount',
            type_factory=float,
            on_success=StationCallbackHandler.entered_amount
        ),
        SwitchTo(Const(text=_('BACK_BUTTON')), id='go_to_pick_product', state=StationStateGroup.pick_product),
        getter=get_bot_data,
        state=StationStateGroup.input_amount
    ),

    # confirm_order
    Window(
        Format(text='<b>–¢–æ–ø–ª–∏–≤–æ:</b> {product.name}\n'
                    '<b>–ö–æ–ª-–≤–æ:</b> {amount} –ª\n'
                    '<b>–ê–¥—Ä–µ—Å:</b> {station.address}\n\n'
                    '<b>–ö –æ–ø–ª–∞—Ç–µ: {total_price} —Ä—É–±–ª–µ–π</b>'),
        Button(Const(text=_('CONFIRM_BUTTON')), id='create_order', on_click=StationCallbackHandler.create_order),
        SwitchTo(Const(text=_('BACK_BUTTON')), id='go_to_input_amount', state=StationStateGroup.input_amount),
        getter=get_order_data,
        state=StationStateGroup.confirm_order
    ),

    # pick_payment
    Window(
        Const(text='<b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ–ø–ª–∞—Ç—ã –∏–ª–∏ –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b>'),
        Url(Const(text='üí≥ –Æ–∫–∞—Å—Å–∞'),  url=Format('vk.com')),  # TODO: url=Format(text='data[invoice_link]')),
        SwitchTo(Const(text='üí≥ –ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã'), id='card_photo', state=StationStateGroup.input_payment_photo),
        Button(Const(text='–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º'), id='manager_support', on_click=StationCallbackHandler.delete_order),
        Button(Const(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id='main_menu', on_click=StationCallbackHandler.delete_order),
        getter=get_input_data,
        state=StationStateGroup.pick_payment,
    ),
)
